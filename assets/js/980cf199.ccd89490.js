"use strict";(self.webpackChunkweb_doc=self.webpackChunkweb_doc||[]).push([[271],{3905:(e,t,r)=>{r.d(t,{Zo:()=>d,kt:()=>v});var n=r(7294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var l=n.createContext({}),c=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},d=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,a=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),p=c(r),m=i,v=p["".concat(l,".").concat(m)]||p[m]||u[m]||a;return r?n.createElement(v,o(o({ref:t},d),{},{components:r})):n.createElement(v,o({ref:t},d))}));function v(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=r.length,o=new Array(a);o[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[p]="string"==typeof e?e:i,o[1]=s;for(var c=2;c<a;c++)o[c]=r[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},6821:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var n=r(7462),i=(r(7294),r(3905));const a={sidebar_position:0,title:"SEF Driver"},o="SEF Linux:tm: Driver",s={unversionedId:"Driver/overview",id:"Driver/overview",title:"SEF Driver",description:"chap-driver}",source:"@site/docs/Driver/overview.md",sourceDirName:"Driver",slug:"/Driver/overview",permalink:"/SEF-SDK/Driver/overview",draft:!1,tags:[],version:"current",sidebarPosition:0,frontMatter:{sidebar_position:0,title:"SEF Driver"},sidebar:"docs",previous:{title:"Build Instructions",permalink:"/SEF-SDK/build-instructions"},next:{title:"SEF Library",permalink:"/SEF-SDK/Library/overview"}},l={},c=[],d={toc:c},p="wrapper";function u(e){let{components:t,...r}=e;return(0,i.kt)(p,(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"chap-driver"},"SEF Linux\u2122\ufe0f Driver"),(0,i.kt)("p",null,"Although an Software-Enabled Flash\u2122\ufe0f (SEF) Unit reports as an NVMe 2.0 device, it requires its\nown ",(0,i.kt)("inlineCode",{parentName:"p"},"sef.ko")," device driver and a customized ",(0,i.kt)("inlineCode",{parentName:"p"},"nvme.ko")," driver. With a kernel version of 6.3, the only\ncustomization is to recognize an SEF Unit\u2019s non-standard PCI\u2122\ufe0f storage class. This requirement\nis expected to be dropped in future firmware."),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"sef.ko")," driver is stacked on the ",(0,i.kt)("inlineCode",{parentName:"p"},"nvme.ko")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"nvme-core.ko")," drivers. It enumerates the NVMe\ndevices ",(0,i.kt)("inlineCode",{parentName:"p"},"/dev/nvme0")," through ",(0,i.kt)("inlineCode",{parentName:"p"},"/dev/nvme255"),". For every ",(0,i.kt)("inlineCode",{parentName:"p"},"/dev/nvmeX")," that supports the SEF\nalternate command set, it creates a corresponding ",(0,i.kt)("inlineCode",{parentName:"p"},"/dev/sefX")," device. A ",(0,i.kt)("inlineCode",{parentName:"p"},"/dev/sefXnY")," is also\ncreated for every ",(0,i.kt)("inlineCode",{parentName:"p"},"/dev/ngXnY")," as well."),(0,i.kt)("p",null,"The following functionality is implemented by the SEF Unit driver."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Translates NVMe device udev asynchronous-event-notifications (AENs) into namespace-AEN udev events."),(0,i.kt)("li",{parentName:"ul"},"Keeps paired commands on the same submit queue."),(0,i.kt)("li",{parentName:"ul"},"Triggers refresh of QoS Domain and Virtual Device information when affected by SEF admin commands."),(0,i.kt)("li",{parentName:"ul"},"Publishes device and namespace information via sysfs so discovery does not require root privileges."),(0,i.kt)("li",{parentName:"ul"},"Adds support for metadata-only reads."),(0,i.kt)("li",{parentName:"ul"},"Flushes delayed writes before the nvme-core driver\u2019s namespace enumeration freezes and flushes a device\u2019s queues.")),(0,i.kt)("p",null,"The SDK always uses the SEF driver but either device driver can be used to communicate with an\nSEF Unit. Sending admin commands to the NVMe device may cause ",(0,i.kt)("inlineCode",{parentName:"p"},"sef-cli")," to return out-of-date\ninformation. ",(0,i.kt)("inlineCode",{parentName:"p"},"sef.ko")," is required for its extended functionality, and in specific cases, it is more\nefficient to use."))}u.isMDXComponent=!0}}]);